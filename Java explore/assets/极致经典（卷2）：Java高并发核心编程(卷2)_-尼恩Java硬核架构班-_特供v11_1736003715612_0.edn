{:highlights [{:id #uuid "6779517b-83d3-4652-a776-4d38c391db31",
               :page 35,
               :position {:bounding {:x1 0,
                                     :y1 615.6484375,
                                     :x2 553.6875,
                                     :y2 1528.390625,
                                     :width 553.6944704648697,
                                     :height 759.2005351082786},
                          :rects ({:x1 87,
                                   :y1 615.6484375,
                                   :x2 487.97943115234375,
                                   :y2 629.6484375,
                                   :width 553.6944704648697,
                                   :height 759.2005351082786}
                                  {:x1 65.6171875,
                                   :y1 631.359375,
                                   :x2 169.64590454101562,
                                   :y2 645.359375,
                                   :width 553.6944704648697,
                                   :height 759.2005351082786}
                                  {:x1 0,
                                   :y1 769.1953125,
                                   :x2 553.6875,
                                   :y2 1528.390625,
                                   :width 553.6944704648697,
                                   :height 759.2005351082786}),
                          :page 35},
               :content {:text "Thread 类是 Java 多线程编程的基础。Java 中虽然有三种方式创建一个线程，但是，三种方式都会涉及到 Thread 类。"},
               :properties {:color "yellow"}}
              {:id #uuid "67795415-6e2b-4978-937e-ac9bcc021fcd",
               :page 36,
               :position {:bounding {:x1 100.7734375,
                                     :y1 453.109375,
                                     :x2 133.39154052734375,
                                     :y2 468.109375,
                                     :width 553.6944704648697,
                                     :height 759.2005351082786},
                          :rects ({:x1 100.7734375,
                                   :y1 453.109375,
                                   :x2 133.39154052734375,
                                   :y2 468.109375,
                                   :width 553.6944704648697,
                                   :height 759.2005351082786}),
                          :page 36},
               :content {:text "线程 Id"},
               :properties {:color "yellow"}}
              {:id #uuid "67795462-e2cf-47e5-8113-1a4c374d6d64",
               :page 36,
               :position {:bounding {:x1 100.7734375,
                                     :y1 541.6953125,
                                     :x2 143.3037109375,
                                     :y2 556.6953125,
                                     :width 553.6944704648697,
                                     :height 759.2005351082786},
                          :rects ({:x1 100.7734375,
                                   :y1 541.6953125,
                                   :x2 143.3037109375,
                                   :y2 556.6953125,
                                   :width 553.6944704648697,
                                   :height 759.2005351082786}),
                          :page 36},
               :content {:text "线程名称"},
               :properties {:color "yellow"}}
              {:id #uuid "67795492-1611-4a93-bceb-074ff7c352ee",
               :page 36,
               :position {:bounding {:x1 100.7734375,
                                     :y1 630.375,
                                     :x2 153.82127380371094,
                                     :y2 645.375,
                                     :width 553.6944704648697,
                                     :height 759.2005351082786},
                          :rects ({:x1 100.7734375,
                                   :y1 630.375,
                                   :x2 153.82127380371094,
                                   :y2 645.375,
                                   :width 553.6944704648697,
                                   :height 759.2005351082786}),
                          :page 36},
               :content {:text "线程优先级"},
               :properties {:color "yellow"}}
              {:id #uuid "6779553f-a3c0-41de-b7b0-630ede966c85",
               :page 36,
               :position {:bounding {:x1 111.125,
                                     :y1 87.0703125,
                                     :x2 173.42758178710938,
                                     :y2 107.0703125,
                                     :width 553.6944704648697,
                                     :height 759.2005351082786},
                          :rects ({:x1 111.125,
                                   :y1 87.0703125,
                                   :x2 173.42758178710938,
                                   :y2 107.0703125,
                                   :width 553.6944704648697,
                                   :height 759.2005351082786}
                                  {:x1 155.84375,
                                   :y1 90.0703125,
                                   :x2 160.5546875,
                                   :y2 104.203125,
                                   :width 553.6944704648697,
                                   :height 759.2005351082786}),
                          :page 36},
               :content {:text "Thread 类"},
               :properties {:color "yellow"}}
              {:id #uuid "67795578-13a6-4a58-b5e4-5f34769e999d",
               :page 37,
               :position {:bounding {:x1 100.7734375,
                                     :y1 367.0859375,
                                     :x2 153.82127380371094,
                                     :y2 382.0859375,
                                     :width 553.6944704648697,
                                     :height 759.2005351082786},
                          :rects ({:x1 100.7734375,
                                   :y1 367.0859375,
                                   :x2 153.82127380371094,
                                   :y2 382.0859375,
                                   :width 553.6944704648697,
                                   :height 759.2005351082786}),
                          :page 37},
               :content {:text "线程的状态"},
               :properties {:color "yellow"}}
              {:id #uuid "67795603-dcd1-4383-b656-011114e16e8f",
               :page 40,
               :position {:bounding {:x1 111.1640625,
                                     :y1 286.6875,
                                     :x2 388.4842224121094,
                                     :y2 306.6875,
                                     :width 553.6944704648697,
                                     :height 759.2005351082786},
                          :rects ({:x1 111.1640625,
                                   :y1 286.6875,
                                   :x2 388.4842224121094,
                                   :y2 306.6875,
                                   :width 553.6944704648697,
                                   :height 759.2005351082786}
                                  {:x1 300.4140625,
                                   :y1 289.6875,
                                   :x2 305.125,
                                   :y2 303.8203125,
                                   :width 553.6944704648697,
                                   :height 759.2005351082786}),
                          :page 40},
               :content {:text "线程创建方法一：继承 Thread 类创建线程类"},
               :properties {:color "yellow"}}
              {:id #uuid "6779569d-a62b-4b79-9412-3f3023bd1cf0",
               :page 40,
               :position {:bounding {:x1 87,
                                     :y1 319.84375,
                                     :x2 397.5832824707031,
                                     :y2 333.84375,
                                     :width 553.6944704648697,
                                     :height 759.2005351082786},
                          :rects ({:x1 87,
                                   :y1 319.84375,
                                   :x2 397.5832824707031,
                                   :y2 333.84375,
                                   :width 553.6944704648697,
                                   :height 759.2005351082786}),
                          :page 40},
               :content {:text "通过前面的空线程例子可以看出，新线程如果需要并发执行自己的代码"},
               :properties {:color "yellow"}}
              {:id #uuid "67796326-5303-434c-b2fa-3f32d687f5ea",
               :page 42,
               :position {:bounding {:x1 140.7421875,
                                     :y1 255.65625,
                                     :x2 565.2486572265625,
                                     :y2 280.65625,
                                     :width 700.9999999999999,
                                     :height 961.1791403011127},
                          :rects ({:x1 140.7421875,
                                   :y1 255.65625,
                                   :x2 565.2486572265625,
                                   :y2 280.65625,
                                   :width 700.9999999999999,
                                   :height 961.1791403011127}
                                  {:x1 400.0546875,
                                   :y1 259.65625,
                                   :x2 406.015625,
                                   :y2 277.5546875,
                                   :width 700.9999999999999,
                                   :height 961.1791403011127}),
                          :page 42},
               :content {:text "线程创建方法二：实现 Runnable 接口创建线程目标类"},
               :properties {:color "yellow"}}
              {:id #uuid "677965ad-b9b8-482d-85fa-91769f369675",
               :page 51,
               :position {:bounding {:x1 140.7421875,
                                     :y1 507.0234375,
                                     :x2 579.1785888671875,
                                     :y2 532.0234375,
                                     :width 700.9999999999999,
                                     :height 961.1791403011127},
                          :rects ({:x1 140.7421875,
                                   :y1 507.0234375,
                                   :x2 579.1785888671875,
                                   :y2 532.0234375,
                                   :width 700.9999999999999,
                                   :height 961.1791403011127}
                                  {:x1 503.2265625,
                                   :y1 511.0234375,
                                   :x2 509.1875,
                                   :y2 528.921875,
                                   :width 700.9999999999999,
                                   :height 961.1791403011127}),
                          :page 51},
               :content {:text "线程创建方法三：使用 Callable 和 FutureTask 创建线程"},
               :properties {:color "yellow"}}
              {:id #uuid "6779673a-a7c2-4982-a980-19ab2808f2ec",
               :page 57,
               :position {:bounding {:x1 140.7421875,
                                     :y1 376.984375,
                                     :x2 444.17138671875,
                                     :y2 401.984375,
                                     :width 700.9999999999999,
                                     :height 961.1791403011127},
                          :rects ({:x1 140.7421875,
                                   :y1 376.984375,
                                   :x2 444.17138671875,
                                   :y2 401.984375,
                                   :width 700.9999999999999,
                                   :height 961.1791403011127}),
                          :page 57},
               :content {:text "线程创建方法四：通过线程池创建线程"},
               :properties {:color "yellow"}}
              {:id #uuid "677a0b5e-c366-41ce-9c00-4796653da849",
               :page 61,
               :position {:bounding {:x1 140.7421875,
                                     :y1 546.640625,
                                     :x2 301.4908447265625,
                                     :y2 571.640625,
                                     :width 700.9999999999999,
                                     :height 961.1791403011127},
                          :rects ({:x1 140.7421875,
                                   :y1 546.640625,
                                   :x2 301.4908447265625,
                                   :y2 571.640625,
                                   :width 700.9999999999999,
                                   :height 961.1791403011127}),
                          :page 61},
               :content {:text "线程的调度与时间片"},
               :properties {:color "yellow"}}
              {:id #uuid "677a0bf9-5f19-4418-99eb-dcda33a0a06e",
               :page 61,
               :position {:bounding {:x1 141.6531982421875,
                                     :y1 795.03125,
                                     :x2 215.98513793945312,
                                     :y2 813.03125,
                                     :width 700.9999999999999,
                                     :height 961.1791403011127},
                          :rects ({:x1 141.6531982421875,
                                   :y1 795.03125,
                                   :x2 215.98513793945312,
                                   :y2 813.03125,
                                   :width 700.9999999999999,
                                   :height 961.1791403011127}),
                          :page 61},
               :content {:text "分时调度模型"},
               :properties {:color "yellow"}}
              {:id #uuid "677a0c1b-69ee-47a7-a517-0780fff38c13",
               :page 62,
               :position {:bounding {:x1 141.9391326904297,
                                     :y1 446.84375,
                                     :x2 230.661376953125,
                                     :y2 464.84375,
                                     :width 700.9999999999999,
                                     :height 961.1791403011127},
                          :rects ({:x1 141.9391326904297,
                                   :y1 446.84375,
                                   :x2 230.661376953125,
                                   :y2 464.84375,
                                   :width 700.9999999999999,
                                   :height 961.1791403011127}),
                          :page 62},
               :content {:text "抢占式调度模型"},
               :properties {:color "yellow"}}
              {:id #uuid "677a4674-9a3d-4fd0-8d71-93549cd6c296",
               :page 62,
               :position {:bounding {:x1 83.078125,
                                     :y1 514.1640625,
                                     :x2 617.8366088867188,
                                     :y2 552.0546875,
                                     :width 700.9999999999999,
                                     :height 961.1791403011127},
                          :rects ({:x1 130.26712036132812,
                                   :y1 514.1640625,
                                   :x2 617.8366088867188,
                                   :y2 532.1640625,
                                   :width 700.9999999999999,
                                   :height 961.1791403011127}
                                  {:x1 83.078125,
                                   :y1 534.0546875,
                                   :x2 556.8110961914062,
                                   :y2 552.0546875,
                                   :width 700.9999999999999,
                                   :height 961.1791403011127}
                                  {:x1 335.0078125,
                                   :y1 537.0546875,
                                   :x2 339.2421875,
                                   :y2 549.75,
                                   :width 700.9999999999999,
                                   :height 961.1791403011127}),
                          :page 62},
               :content {:text "目前大部分操作系统都是使用抢占式调度模型进行线程调度。Java 的线程管理和调度是委托给了操作系统完成的，与之相对应，Java 的线程调度也是使用抢占式调度模型。"},
               :properties {:color "yellow"}}
              {:id #uuid "677a46d0-13cc-468c-9c46-9fb4bf820aa7",
               :page 65,
               :position {:bounding {:x1 140.7421875,
                                     :y1 359.3984375,
                                     :x2 301.4908447265625,
                                     :y2 384.3984375,
                                     :width 700.9999999999999,
                                     :height 961.1791403011127},
                          :rects ({:x1 140.7421875,
                                   :y1 359.3984375,
                                   :x2 301.4908447265625,
                                   :y2 384.3984375,
                                   :width 700.9999999999999,
                                   :height 961.1791403011127}),
                          :page 65},
               :content {:text "线程的生命周期状态"},
               :properties {:color "yellow"}}
              {:id #uuid "677a4775-9906-427b-9e90-bfd19bcec3f7",
               :page 66,
               :position {:bounding {:x1 159.25,
                                     :y1 491.0234375,
                                     :x2 541.68701171875,
                                     :y2 507.0234375,
                                     :width 700.9999999999999,
                                     :height 961.1791403011127},
                          :rects ({:x1 159.25,
                                   :y1 491.0234375,
                                   :x2 541.68701171875,
                                   :y2 507.0234375,
                                   :width 700.9999999999999,
                                   :height 961.1791403011127}),
                          :page 66},
               :content {:text "图 1-11 JVM 的线程状态及其幕后的操作系统线程状态的转换图（简化版）"},
               :properties {:color "yellow"}}
              {:id #uuid "677a4b71-5843-4700-aef4-0e82f0bd5dee",
               :page 65,
               :position {:bounding {:x1 109.84375,
                                     :y1 756.03125,
                                     :x2 212.95457458496094,
                                     :y2 775.03125,
                                     :width 700.9999999999999,
                                     :height 961.1791403011127},
                          :rects ({:x1 109.84375,
                                   :y1 756.03125,
                                   :x2 212.95457458496094,
                                   :y2 775.03125,
                                   :width 700.9999999999999,
                                   :height 961.1791403011127}
                                  {:x1 156.046875,
                                   :y1 759.03125,
                                   :x2 160.53125,
                                   :y2 772.4921875,
                                   :width 700.9999999999999,
                                   :height 961.1791403011127}),
                          :page 65},
               :content {:text "1. NEW 新建状态"},
               :properties {:color "yellow"}}
              {:id #uuid "677a4b87-132d-4604-a6db-bfa7f6714be4",
               :page 66,
               :position {:bounding {:x1 109.84375,
                                     :y1 137.375,
                                     :x2 268.0172424316406,
                                     :y2 156.375,
                                     :width 700.9999999999999,
                                     :height 961.1791403011127},
                          :rects ({:x1 109.84375,
                                   :y1 137.375,
                                   :x2 268.0172424316406,
                                   :y2 156.375,
                                   :width 700.9999999999999,
                                   :height 961.1791403011127}
                                  {:x1 197.71875,
                                   :y1 140.375,
                                   :x2 202.203125,
                                   :y2 153.8359375,
                                   :width 700.9999999999999,
                                   :height 961.1791403011127}),
                          :page 66},
               :content {:text "2. RUNNABLE 可执行状态"},
               :properties {:color "yellow"}}
              {:id #uuid "677a4bce-251f-4745-93a8-f04f62bbb1d8",
               :page 66,
               :position {:bounding {:x1 109.84375,
                                     :y1 821.6484375,
                                     :x2 268.62646484375,
                                     :y2 840.6484375,
                                     :width 700.9999999999999,
                                     :height 961.1791403011127},
                          :rects ({:x1 109.84375,
                                   :y1 821.6484375,
                                   :x2 268.62646484375,
                                   :y2 840.6484375,
                                   :width 700.9999999999999,
                                   :height 961.1791403011127}
                                  {:x1 211.7734375,
                                   :y1 824.6484375,
                                   :x2 216.2578125,
                                   :y2 838.109375,
                                   :width 700.9999999999999,
                                   :height 961.1791403011127}),
                          :page 66},
               :content {:text "3. TERMINATED 终止状态"},
               :properties {:color "yellow"}}
              {:id #uuid "677a4be4-0ef5-470d-9fb8-e9585e0ad5e5",
               :page 67,
               :position {:bounding {:x1 109.84375,
                                     :y1 157.2578125,
                                     :x2 314.8526611328125,
                                     :y2 176.2578125,
                                     :width 700.9999999999999,
                                     :height 961.1791403011127},
                          :rects ({:x1 109.84375,
                                   :y1 157.2578125,
                                   :x2 314.8526611328125,
                                   :y2 176.2578125,
                                   :width 700.9999999999999,
                                   :height 961.1791403011127}
                                  {:x1 231.1796875,
                                   :y1 160.2578125,
                                   :x2 261.3083190917969,
                                   :y2 173.71875,
                                   :width 700.9999999999999,
                                   :height 961.1791403011127}),
                          :page 67},
               :content {:text "4. TIMED_WAITING 限时等待状态"},
               :properties {:color "yellow"}}
              {:id #uuid "677a5c7c-350c-4706-aeb5-4a28e0a636af",
               :page 107,
               :position {:bounding {:x1 140.7421875,
                                     :y1 245.7109375,
                                     :x2 319.22137451171875,
                                     :y2 270.7109375,
                                     :width 700.9999999999999,
                                     :height 961.1791403011127},
                          :rects ({:x1 140.7421875,
                                   :y1 245.7109375,
                                   :x2 319.22137451171875,
                                   :y2 270.7109375,
                                   :width 700.9999999999999,
                                   :height 961.1791403011127}),
                          :page 107},
               :content {:text "线程池的标准创建方式"},
               :properties {:color "yellow"}}
              {:id #uuid "677a5ca6-d6ce-4127-9936-fe475cc08468",
               :page 113,
               :position {:bounding {:x1 104.796875,
                                     :y1 140.890625,
                                     :x2 389.48516845703125,
                                     :y2 158.890625,
                                     :width 700.9999999999999,
                                     :height 961.1791403011127},
                          :rects ({:x1 104.796875,
                                   :y1 140.890625,
                                   :x2 389.48516845703125,
                                   :y2 158.890625,
                                   :width 700.9999999999999,
                                   :height 961.1791403011127}
                                  {:x1 360.8046875,
                                   :y1 143.890625,
                                   :x2 365.0390625,
                                   :y2 156.5859375,
                                   :width 700.9999999999999,
                                   :height 961.1791403011127}),
                          :page 113},
               :content {:text "总体的线程池的任务调度流程，大致如图 1-15 所示"},
               :properties {:color "yellow"}}
              {:id #uuid "677a5ee1-38c2-4029-af38-4f241aa32ea5",
               :page 131,
               :position {:bounding {:x1 83.078125,
                                     :y1 465.375,
                                     :x2 617.767578125,
                                     :y2 503.2578125,
                                     :width 700.9999999999999,
                                     :height 961.1791403011127},
                          :rects ({:x1 122.80841827392578,
                                   :y1 465.375,
                                   :x2 617.767578125,
                                   :y2 483.375,
                                   :width 700.9999999999999,
                                   :height 961.1791403011127}
                                  {:x1 547.78125,
                                   :y1 468.375,
                                   :x2 617.767578125,
                                   :y2 481.0703125,
                                   :width 700.9999999999999,
                                   :height 961.1791403011127}
                                  {:x1 83.078125,
                                   :y1 485.2578125,
                                   :x2 108.46954345703125,
                                   :y2 503.2578125,
                                   :width 700.9999999999999,
                                   :height 961.1791403011127}),
                          :page 131},
               :content {:text "很多公司（如阿里、华为等）的编程规范中，非常明确的禁止使用 Executors 快捷创建线程池"},
               :properties {:color "yellow"}}
              {:id #uuid "677a5f2b-11af-474d-880f-1f656f279a29",
               :page 131,
               :position {:bounding {:x1 127.5859375,
                                     :y1 529.4609375,
                                     :x2 454.456787109375,
                                     :y2 548.4609375,
                                     :width 700.9999999999999,
                                     :height 961.1791403011127},
                          :rects ({:x1 127.5859375,
                                   :y1 529.4609375,
                                   :x2 454.456787109375,
                                   :y2 548.4609375,
                                   :width 700.9999999999999,
                                   :height 961.1791403011127}
                                  {:x1 217.5390625,
                                   :y1 532.15625,
                                   :x2 222.0234375,
                                   :y2 545.6171875,
                                   :width 700.9999999999999,
                                   :height 961.1791403011127}),
                          :page 131},
               :content {:text "使用 Executors 创建“固定数量的线程池”的潜在问题"},
               :properties {:color "blue"}}
              {:id #uuid "677a623c-54e8-4941-9bc3-38d64e2564d2",
               :page 443,
               :position {:bounding {:x1 131.7897186279297,
                                     :y1 566.1796875,
                                     :x2 180.1484375,
                                     :y2 583.1796875,
                                     :width 647.9796724472013,
                                     :height 888.4800920048468},
                          :rects ({:x1 131.7897186279297,
                                   :y1 566.1796875,
                                   :x2 180.1484375,
                                   :y2 583.1796875,
                                   :width 647.9796724472013,
                                   :height 888.4800920048468}),
                          :page 443},
               :content {:text "阻塞添加"},
               :properties {:color "yellow"}}
              {:id #uuid "677a624f-88f0-484a-ad73-1e339cccc26f",
               :page 443,
               :position {:bounding {:x1 131.7897186279297,
                                     :y1 631.2578125,
                                     :x2 180.1484375,
                                     :y2 648.2578125,
                                     :width 647.9796724472013,
                                     :height 888.4800920048468},
                          :rects ({:x1 131.7897186279297,
                                   :y1 631.2578125,
                                   :x2 180.1484375,
                                   :y2 648.2578125,
                                   :width 647.9796724472013,
                                   :height 888.4800920048468}),
                          :page 443},
               :content {:text "阻塞删除"},
               :properties {:color "yellow"}}
              {:id #uuid "677a642f-6648-494f-9635-60c321ffa079",
               :page 132,
               :position {:bounding {:x1 117.9375,
                                     :y1 102.0859375,
                                     :x2 402.17437744140625,
                                     :y2 119.0859375,
                                     :width 647.9796724472013,
                                     :height 888.4800920048468},
                          :rects ({:x1 117.9375,
                                   :y1 102.0859375,
                                   :x2 402.17437744140625,
                                   :y2 119.0859375,
                                   :width 647.9796724472013,
                                   :height 888.4800920048468}),
                          :page 132},
               :content {:text "使用 Executors 创建“单线程化线程池”的潜在问题"},
               :properties {:color "yellow"}}
              {:id #uuid "677a654c-6a1d-4a86-8d4c-9e4721b95efb",
               :page 132,
               :position {:bounding {:x1 76.796875,
                                     :y1 347.5703125,
                                     :x2 576.0441284179688,
                                     :y2 382.453125,
                                     :width 647.9796724472013,
                                     :height 888.4800920048468},
                          :rects ({:x1 145.0175018310547,
                                   :y1 347.5703125,
                                   :x2 576.0441284179688,
                                   :y2 364.0703125,
                                   :width 647.9796724472013,
                                   :height 888.4800920048468}
                                  {:x1 76.796875,
                                   :y1 365.953125,
                                   :x2 392.11474609375,
                                   :y2 382.453125,
                                   :width 647.9796724472013,
                                   :height 888.4800920048468}),
                          :page 132},
               :content {:text "使用 FinalizableDelegatedExecutorService 对该“固定大小线程池”进行包装，这一层包装的作用，就是防止线程池的 corePoolSize 被动态的修改。"},
               :properties {:color "yellow"}}
              {:id #uuid "677a663b-3e0d-4447-b3f6-838e2b076f6f",
               :page 133,
               :position {:bounding {:x1 117.9375,
                                     :y1 201.0625,
                                     :x2 395.2617492675781,
                                     :y2 218.0625,
                                     :width 647.9796724472013,
                                     :height 888.4800920048468},
                          :rects ({:x1 117.9375,
                                   :y1 201.0625,
                                   :x2 395.2617492675781,
                                   :y2 218.0625,
                                   :width 647.9796724472013,
                                   :height 888.4800920048468}),
                          :page 133},
               :content {:text "使用 Executors 创建“可缓存线程池”的潜在问题"},
               :properties {:color "blue"}}
              {:id #uuid "677a66a3-0651-496b-9575-33a59a129e78",
               :page 133,
               :position {:bounding {:x1 117.9375,
                                     :y1 729.515625,
                                     :x2 395.2617492675781,
                                     :y2 746.515625,
                                     :width 647.9796724472013,
                                     :height 888.4800920048468},
                          :rects ({:x1 117.9375,
                                   :y1 729.515625,
                                   :x2 395.2617492675781,
                                   :y2 746.515625,
                                   :width 647.9796724472013,
                                   :height 888.4800920048468}),
                          :page 133},
               :content {:text "使用 Executors 创建“可调度线程池”的潜在问题"},
               :properties {:color "blue"}}
              {:id #uuid "677a678b-947c-4caf-ac2c-2258e087e931",
               :page 133,
               :position {:bounding {:x1 76.796875,
                                     :y1 412.890625,
                                     :x2 571.2672729492188,
                                     :y2 447.796875,
                                     :width 647.9796724472013,
                                     :height 888.4800920048468},
                          :rects ({:x1 143.93450927734375,
                                   :y1 412.890625,
                                   :x2 571.2672729492188,
                                   :y2 429.390625,
                                   :width 647.9796724472013,
                                   :height 888.4800920048468}
                                  {:x1 76.796875,
                                   :y1 431.296875,
                                   :x2 161.85556030273438,
                                   :y2 447.796875,
                                   :width 647.9796724472013,
                                   :height 888.4800920048468}),
                          :page 133},
               :content {:text "通过调用 ThreadPoolExecutor 标准构造器创建一个核心线程数为 0、最大线程数不设限制的线程池。"},
               :properties {:color "yellow"}}
              {:id #uuid "677a68d3-800b-4bfa-a180-20bd5759102e",
               :page 133,
               :position {:bounding {:x1 76.796875,
                                     :y1 651.8984375,
                                     :x2 575.7449951171875,
                                     :y2 723.5390625,
                                     :width 647.9796724472013,
                                     :height 888.4800920048468},
                          :rects ({:x1 101.8203125,
                                   :y1 651.8984375,
                                   :x2 575.7449951171875,
                                   :y2 668.3984375,
                                   :width 647.9796724472013,
                                   :height 888.4800920048468}
                                  {:x1 76.796875,
                                   :y1 670.28125,
                                   :x2 571.063232421875,
                                   :y2 686.78125,
                                   :width 647.9796724472013,
                                   :height 888.4800920048468}
                                  {:x1 76.796875,
                                   :y1 688.65625,
                                   :x2 571.0472412109375,
                                   :y2 705.15625,
                                   :width 647.9796724472013,
                                   :height 888.4800920048468}
                                  {:x1 76.796875,
                                   :y1 707.0390625,
                                   :x2 135.6065673828125,
                                   :y2 723.5390625,
                                   :width 647.9796724472013,
                                   :height 888.4800920048468}),
                          :page 133},
               :content {:text "使用 Executors 创建的“可缓存线程池”的潜在问题，存在于其最大线程数量不设限上。由于其 maximumPoolSize 的值为 Integer.MAX_VALUE 非常大，可以认为是可以无限创建线程的，如果任务提交较多，会造成大量的大量线程被启动，很有可能造成 OOM 异常，甚至导致 CPU 线程资源耗尽。"},
               :properties {:color "yellow"}}
              {:id #uuid "677a723b-e014-4155-93e5-cef9f91e797c",
               :page 134,
               :position {:bounding {:x1 76.796875,
                                     :y1 420.4140625,
                                     :x2 571.1886596679688,
                                     :y2 510.4296875,
                                     :width 647.9796724472013,
                                     :height 888.4800920048468},
                          :rects ({:x1 101.8203125,
                                   :y1 420.4140625,
                                   :x2 571.1886596679688,
                                   :y2 436.9140625,
                                   :width 647.9796724472013,
                                   :height 888.4800920048468}
                                  {:x1 76.796875,
                                   :y1 438.7890625,
                                   :x2 571.1878662109375,
                                   :y2 455.2890625,
                                   :width 647.9796724472013,
                                   :height 888.4800920048468}
                                  {:x1 76.796875,
                                   :y1 457.171875,
                                   :x2 571.1875,
                                   :y2 473.671875,
                                   :width 647.9796724472013,
                                   :height 888.4800920048468}
                                  {:x1 76.796875,
                                   :y1 475.5546875,
                                   :x2 571.0167236328125,
                                   :y2 492.0546875,
                                   :width 647.9796724472013,
                                   :height 888.4800920048468}
                                  {:x1 76.796875,
                                   :y1 493.9296875,
                                   :x2 248.40509033203125,
                                   :y2 510.4296875,
                                   :width 647.9796724472013,
                                   :height 888.4800920048468}),
                          :page 134},
               :content {:text "使用 Executors 创建的“可调度线程池”的潜在问题，阿里巴巴的 Java 编程规范认为：存在于其最大线程数量不设限上。由于其线程数量不设限制，如果到期任务太多就会导致的 CPU 的线程资源耗尽。实际上，通过源码分析可以看出，“可调度线程池”的潜在问题，首先还是无界工作队列（任务排队的队列）长度都为 Integer.MAX_VALUE，可能会堆积大量的任务，从而导致 OOM 甚至耗尽内存资源的问题。"},
               :properties {:color "yellow"}}
              {:id #uuid "67872a24-6b36-4596-bc1c-4874c77e9464",
               :page 135,
               :position {:bounding {:x1 87.640625,
                                     :y1 584.1953125,
                                     :x2 651.70166015625,
                                     :y2 623.671875,
                                     :width 739.4917802535822,
                                     :height 1013.9573089926927},
                          :rects ({:x1 116.1953125,
                                   :y1 584.1953125,
                                   :x2 651.70166015625,
                                   :y2 602.6953125,
                                   :width 739.4917802535822,
                                   :height 1013.9573089926927}
                                  {:x1 325.4375,
                                   :y1 587.1953125,
                                   :x2 651.70166015625,
                                   :y2 600.5859375,
                                   :width 739.4917802535822,
                                   :height 1013.9573089926927}
                                  {:x1 87.640625,
                                   :y1 605.171875,
                                   :x2 584.884033203125,
                                   :y2 623.671875,
                                   :width 739.4917802535822,
                                   :height 1013.9573089926927}
                                  {:x1 87.640625,
                                   :y1 608.171875,
                                   :x2 114.4268798828125,
                                   :y2 621.5625,
                                   :width 739.4917802535822,
                                   :height 1013.9573089926927}),
                          :page 135},
               :content {:text "使用标准构造器 ThreadPoolExecutor 去创建线程池线程池时，会涉及到线程数的配置，而线程数的配置与异步任务类型是分不开的。这里将线程池的异步任务大致分为以下三类"},
               :properties {:color "yellow"}}
              {:id #uuid "67872a4f-c17c-480f-8e96-6f09109051b0",
               :page 135,
               :position {:bounding {:x1 115.875,
                                     :y1 633.40625,
                                     :x2 240.45111083984375,
                                     :y2 653.40625,
                                     :width 739.4917802535822,
                                     :height 1013.9573089926927},
                          :rects ({:x1 115.875,
                                   :y1 633.40625,
                                   :x2 240.45111083984375,
                                   :y2 653.40625,
                                   :width 739.4917802535822,
                                   :height 1013.9573089926927}
                                  {:x1 166.140625,
                                   :y1 635.921875,
                                   :x2 170.875,
                                   :y2 650.125,
                                   :width 739.4917802535822,
                                   :height 1013.9573089926927}),
                          :page 135},
               :content {:text "（1）IO 密集型任务"},
               :properties {:color "green"}}
              {:id #uuid "67872a5d-0853-4add-98ae-0b957a8ea84e",
               :page 135,
               :position {:bounding {:x1 115.875,
                                     :y1 704.4453125,
                                     :x2 252.880859375,
                                     :y2 724.4453125,
                                     :width 739.4917802535822,
                                     :height 1013.9573089926927},
                          :rects ({:x1 115.875,
                                   :y1 704.4453125,
                                   :x2 252.880859375,
                                   :y2 724.4453125,
                                   :width 739.4917802535822,
                                   :height 1013.9573089926927}
                                  {:x1 178.6953125,
                                   :y1 706.9609375,
                                   :x2 183.4296875,
                                   :y2 721.1640625,
                                   :width 739.4917802535822,
                                   :height 1013.9573089926927}),
                          :page 135},
               :content {:text "（2）CPU 密集型任务"},
               :properties {:color "green"}}
              {:id #uuid "67872a71-acac-4ffd-b59d-a956d31d435f",
               :page 135,
               :position {:bounding {:x1 115.875,
                                     :y1 775.4453125,
                                     :x2 221.90081787109375,
                                     :y2 795.4453125,
                                     :width 739.4917802535822,
                                     :height 1013.9573089926927},
                          :rects ({:x1 115.875,
                                   :y1 775.4453125,
                                   :x2 221.90081787109375,
                                   :y2 795.4453125,
                                   :width 739.4917802535822,
                                   :height 1013.9573089926927}),
                          :page 135},
               :content {:text "（3）混合型任务"},
               :properties {:color "green"}}
              {:id #uuid "67872b06-408a-42ac-b2c1-01f40f1646cc",
               :page 136,
               :position {:bounding {:x1 148.46875,
                                     :y1 116.296875,
                                     :x2 384.8307800292969,
                                     :y2 142.796875,
                                     :width 739.4917802535822,
                                     :height 1013.9573089926927},
                          :rects ({:x1 148.46875,
                                   :y1 116.296875,
                                   :x2 384.8307800292969,
                                   :y2 142.796875,
                                   :width 739.4917802535822,
                                   :height 1013.9573089926927}
                                  {:x1 191.875,
                                   :y1 120.296875,
                                   :x2 198.1640625,
                                   :y2 139.171875,
                                   :width 739.4917802535822,
                                   :height 1013.9573089926927}),
                          :page 136},
               :content {:text "为 IO 密集型任务确定线程数"},
               :properties {:color "blue"}}
              {:id #uuid "67872b42-8fa9-4aaf-8df3-caa6dfeee118",
               :page 136,
               :position {:bounding {:x1 87.640625,
                                     :y1 160.25,
                                     :x2 651.8345336914062,
                                     :y2 220.703125,
                                     :width 739.4917802535822,
                                     :height 1013.9573089926927},
                          :rects ({:x1 116.1953125,
                                   :y1 160.25,
                                   :x2 651.50830078125,
                                   :y2 178.75,
                                   :width 739.4917802535822,
                                   :height 1013.9573089926927}
                                  {:x1 87.640625,
                                   :y1 181.2265625,
                                   :x2 651.8345336914062,
                                   :y2 199.7265625,
                                   :width 739.4917802535822,
                                   :height 1013.9573089926927}
                                  {:x1 606.359375,
                                   :y1 184.2265625,
                                   :x2 651.8345336914062,
                                   :y2 197.6171875,
                                   :width 739.4917802535822,
                                   :height 1013.9573089926927}
                                  {:x1 87.640625,
                                   :y1 202.203125,
                                   :x2 114.4268798828125,
                                   :y2 220.703125,
                                   :width 739.4917802535822,
                                   :height 1013.9573089926927}),
                          :page 136},
               :content {:text "由于 IO 密集型任务的 CPU 使用率较低，导致线程空余时间很多，所以通常就需要开 CPU核心数两倍的线程。当 IO 线程空闲时，可以启用其他线程继续使用 CPU，以提高 CPU 的使用率。"},
               :properties {:color "purple"}}
              {:id #uuid "67875290-7747-456a-aaf1-2a1e23047745",
               :page 139,
               :position {:bounding {:x1 148.46875,
                                     :y1 116.296875,
                                     :x2 404.5544128417969,
                                     :y2 142.796875,
                                     :width 739.4917802535822,
                                     :height 1013.9573089926927},
                          :rects ({:x1 148.46875,
                                   :y1 116.296875,
                                   :x2 404.5544128417969,
                                   :y2 142.796875,
                                   :width 739.4917802535822,
                                   :height 1013.9573089926927}),
                          :page 139},
               :content {:text "为 CPU 密集型任务确定线程数"},
               :properties {:color "blue"}}
              {:id #uuid "678752c0-c114-4776-b924-35154b20aa91",
               :page 139,
               :position {:bounding {:x1 87.640625,
                                     :y1 160.25,
                                     :x2 651.845947265625,
                                     :y2 199.7265625,
                                     :width 739.4917802535822,
                                     :height 1013.9573089926927},
                          :rects ({:x1 116.1953125,
                                   :y1 160.25,
                                   :x2 651.845947265625,
                                   :y2 178.75,
                                   :width 739.4917802535822,
                                   :height 1013.9573089926927}
                                  {:x1 87.640625,
                                   :y1 181.2265625,
                                   :x2 342.0084228515625,
                                   :y2 199.7265625,
                                   :width 739.4917802535822,
                                   :height 1013.9573089926927}),
                          :page 139},
               :content {:text "CPU 密集型任务也叫计算密集型任务，其特点是要进行大量计算而需要消耗 CPU 资源，比如计算圆周率、对视频进行高清解码等等。"},
               :properties {:color "purple"}}
              {:id #uuid "6787530d-ae96-428f-8d5e-034cedc99f6a",
               :page 140,
               :position {:bounding {:x1 148.46875,
                                     :y1 324.8125,
                                     :x2 355.6234130859375,
                                     :y2 351.3125,
                                     :width 739.4917802535822,
                                     :height 1013.9573089926927},
                          :rects ({:x1 148.46875,
                                   :y1 324.8125,
                                   :x2 355.6234130859375,
                                   :y2 351.3125,
                                   :width 739.4917802535822,
                                   :height 1013.9573089926927}),
                          :page 140},
               :content {:text "为混合型任务确定线程数"},
               :properties {:color "blue"}}
              {:id #uuid "6787533c-7c9e-488a-96ef-6be14563701e",
               :page 140,
               :position {:bounding {:x1 87.640625,
                                     :y1 368.7578125,
                                     :x2 658.4513549804688,
                                     :y2 408.234375,
                                     :width 739.4917802535822,
                                     :height 1013.9573089926927},
                          :rects ({:x1 116.1953125,
                                   :y1 368.7578125,
                                   :x2 651.6232299804688,
                                   :y2 387.2578125,
                                   :width 739.4917802535822,
                                   :height 1013.9573089926927}
                                  {:x1 299.78125,
                                   :y1 371.7578125,
                                   :x2 393.8277587890625,
                                   :y2 385.1484375,
                                   :width 739.4917802535822,
                                   :height 1013.9573089926927}
                                  {:x1 87.640625,
                                   :y1 389.734375,
                                   :x2 658.4513549804688,
                                   :y2 408.234375,
                                   :width 739.4917802535822,
                                   :height 1013.9573089926927}
                                  {:x1 574.1640625,
                                   :y1 392.734375,
                                   :x2 578.625,
                                   :y2 406.125,
                                   :width 739.4917802535822,
                                   :height 1013.9573089926927}),
                          :page 140},
               :content {:text "混合型任务既要执行逻辑计算，又要进行大量非 CPU 耗时操作（如 RPC 调用、数据库访问、网络通信等），所以，混合型任务 CPU 利用率不是太高，非 CPU 耗时往往是 CPU 耗时的数倍。"},
               :properties {:color "purple"}}
              {:id #uuid "6787538a-e7ac-4b42-afba-81c94aa8baa3",
               :page 140,
               :position {:bounding {:x1 116.1953125,
                                     :y1 522.15625,
                                     :x2 553.7064208984375,
                                     :y2 539.15625,
                                     :width 739.4917802535822,
                                     :height 1013.9573089926927},
                          :rects ({:x1 116.1953125,
                                   :y1 522.15625,
                                   :x2 553.7064208984375,
                                   :y2 539.15625,
                                   :width 739.4917802535822,
                                   :height 1013.9573089926927}),
                          :page 140},
               :content {:text "最佳线程数 = （（线程等待时间+线程 CPU 时间）/线程 CPU 时间 ）* CPU 核数"},
               :properties {:color "yellow"}}
              {:id #uuid "678753a0-685a-49b7-ae8b-b8467656661a",
               :page 140,
               :position {:bounding {:x1 116.1953125,
                                     :y1 576.6953125,
                                     :x2 503.0345458984375,
                                     :y2 593.6953125,
                                     :width 739.4917802535822,
                                     :height 1013.9573089926927},
                          :rects ({:x1 116.1953125,
                                   :y1 576.6953125,
                                   :x2 503.0345458984375,
                                   :y2 593.6953125,
                                   :width 739.4917802535822,
                                   :height 1013.9573089926927}),
                          :page 140},
               :content {:text "最佳线程数目 =（线程等待时间与线程 CPU 时间之比 + 1）* CPU 核数"},
               :properties {:color "yellow"}}
              {:id #uuid "678753ef-fd3a-4572-91e6-edbb81b1e4ff",
               :page 140,
               :position {:bounding {:x1 87.640625,
                                     :y1 721.390625,
                                     :x2 651.687744140625,
                                     :y2 760.8671875,
                                     :width 739.4917802535822,
                                     :height 1013.9573089926927},
                          :rects ({:x1 638.2398681640625,
                                   :y1 721.390625,
                                   :x2 651.687744140625,
                                   :y2 739.890625,
                                   :width 739.4917802535822,
                                   :height 1013.9573089926927}
                                  {:x1 87.640625,
                                   :y1 742.3671875,
                                   :x2 638.41650390625,
                                   :y2 760.8671875,
                                   :width 739.4917802535822,
                                   :height 1013.9573089926927}
                                  {:x1 87.640625,
                                   :y1 745.3671875,
                                   :x2 517.677978515625,
                                   :y2 758.7578125,
                                   :width 739.4917802535822,
                                   :height 1013.9573089926927}
                                  {:x1 553.109375,
                                   :y1 745.3671875,
                                   :x2 571.1640625,
                                   :y2 758.7578125,
                                   :width 739.4917802535822,
                                   :height 1013.9573089926927}),
                          :page 140},
               :content {:text "使用很多线程是否就一定比单线程高效呢？答案是否定的，比如大名鼎鼎的 Redis 就是单线程的"},
               :properties {:color "yellow"}}
              {:id #uuid "67878743-039f-43dc-a50e-9e29bf8d43d4",
               :page 147,
               :position {:bounding {:x1 148.46875,
                                     :y1 308.3515625,
                                     :x2 413.1191711425781,
                                     :y2 334.8515625,
                                     :width 739.4917802535822,
                                     :height 1013.9573089926927},
                          :rects ({:x1 148.46875,
                                   :y1 308.3515625,
                                   :x2 413.1191711425781,
                                   :y2 334.8515625,
                                   :width 739.4917802535822,
                                   :height 1013.9573089926927}
                                  {:x1 295.453125,
                                   :y1 312.3515625,
                                   :x2 301.7421875,
                                   :y2 331.2265625,
                                   :width 739.4917802535822,
                                   :height 1013.9573089926927}),
                          :page 147},
               :content {:text "使用 ThreadLocal 进行线程隔离"},
               :properties {:color "blue"}}
              {:id #uuid "67878767-d483-4e7a-b260-8a24a43d34a6",
               :page 148,
               :position {:bounding {:x1 148.46875,
                                     :y1 116.296875,
                                     :x2 469.58502197265625,
                                     :y2 142.796875,
                                     :width 739.4917802535822,
                                     :height 1013.9573089926927},
                          :rects ({:x1 148.46875,
                                   :y1 116.296875,
                                   :x2 469.58502197265625,
                                   :y2 142.796875,
                                   :width 739.4917802535822,
                                   :height 1013.9573089926927}
                                  {:x1 295.453125,
                                   :y1 120.296875,
                                   :x2 301.7421875,
                                   :y2 139.171875,
                                   :width 739.4917802535822,
                                   :height 1013.9573089926927}),
                          :page 148},
               :content {:text "使用 ThreadLocal 进行跨函数数据传递"},
               :properties {:color "blue"}}
              {:id #uuid "678787b7-a703-499b-98e7-c0ae75283a25",
               :page 148,
               :position {:bounding {:x1 116.1953125,
                                     :y1 160.25,
                                     :x2 461.98065185546875,
                                     :y2 178.75,
                                     :width 739.4917802535822,
                                     :height 1013.9573089926927},
                          :rects ({:x1 116.1953125,
                                   :y1 160.25,
                                   :x2 461.98065185546875,
                                   :y2 178.75,
                                   :width 739.4917802535822,
                                   :height 1013.9573089926927}
                                  {:x1 185,
                                   :y1 163.25,
                                   :x2 189.4609375,
                                   :y2 176.640625,
                                   :width 739.4917802535822,
                                   :height 1013.9573089926927}),
                          :page 148},
               :content {:text "ThreadLocal 在“跨函数数据传递”应用场景的典型有很多"},
               :properties {:color "yellow"}}],
 :extra {:page 165}}
